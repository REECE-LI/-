//声明：本代码由山外多功能软件自动生成，请勿修改。 

#ifndef _MAIN_MENU_H_
#define _MAIN_MENU_H_

#include "common.h"
#include "include.h"
#include "VCAN_menu.h"

extern void        main_menu_init(void);
extern result_e    main_menu_deal(void);
extern void        menu_init(Site_t site,menu_t *menu,uint8 tab,uint8 new_tab,uint8 max_tab);

extern void        pid_menu_init(void);
extern result_e    pid_menu_deal(void);
extern result_e wheel_KP(void);
extern result_e wheel_KD(void);


/***************************************** 下列为用户函数配置  **************************************/
extern result_e main_func(void);
extern result_e wheel_func(void);
extern result_e cam_func(void);
extern result_e KP_func(void);
extern result_e KI_func(void);
extern result_e KD_func(void);


static unsigned char const main_func_name[3*2*16]= //主程序  
{
    //共3个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 主 */
    0x02,0x00,0x01,0x00,0x00,0x00,0x7F,0xFC,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,
    0x3F,0xF8,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xFF,0xFE,0x00,0x00,
    /* 程 */
    0x08,0x00,0x1D,0xFC,0xF1,0x04,0x11,0x04,0x11,0x04,0xFD,0xFC,0x10,0x00,0x30,0x00,
    0x39,0xFE,0x54,0x20,0x54,0x20,0x91,0xFC,0x10,0x20,0x10,0x20,0x13,0xFE,0x10,0x00,
    /* 序 */
    0x01,0x00,0x00,0x80,0x3F,0xFE,0x20,0x00,0x23,0xF8,0x20,0x10,0x20,0xA0,0x20,0x40,
    0x2F,0xFE,0x20,0x42,0x20,0x44,0x20,0x40,0x40,0x40,0x40,0x40,0x81,0x40,0x00,0x80,
};

static unsigned char const wheel_func_name[7*2*16]= //轮胎PID控制  
{
    //共7个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 轮 */
    0x20,0x40,0x20,0x40,0x20,0xA0,0xFC,0xA0,0x41,0x10,0x52,0x08,0x94,0x06,0xFD,0x10,
    0x11,0x20,0x11,0x40,0x1D,0x80,0xF1,0x00,0x51,0x04,0x11,0x04,0x10,0xFC,0x10,0x00,
    /* 胎 */
    0x00,0x20,0x3C,0x20,0x24,0x20,0x24,0x40,0x24,0x48,0x3C,0x84,0x25,0xFE,0x24,0x82,
    0x24,0x00,0x3C,0xFC,0x24,0x84,0x24,0x84,0x24,0x84,0x44,0x84,0x54,0xFC,0x88,0x84,
    /* P */
    0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x42,0x00,
    0x7C,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,
    /* I */
    0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x10,0x00,
    0x10,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,
    /* D */
    0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x44,0x00,0x42,0x00,0x42,0x00,0x42,0x00,
    0x42,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x44,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,
    /* 控 */
    0x10,0x40,0x10,0x20,0x10,0x20,0x13,0xFE,0xFA,0x02,0x14,0x94,0x11,0x08,0x1A,0x04,
    0x30,0x00,0xD1,0xFC,0x10,0x20,0x10,0x20,0x10,0x20,0x10,0x20,0x57,0xFE,0x20,0x00,
    /* 制 */
    0x04,0x04,0x24,0x04,0x24,0x04,0x3F,0xA4,0x44,0x24,0x04,0x24,0xFF,0xE4,0x04,0x24,
    0x04,0x24,0x3F,0xA4,0x24,0xA4,0x24,0xA4,0x26,0x84,0x25,0x04,0x04,0x14,0x04,0x08,
};

static unsigned char const cam_func_name[6*2*16]= //总钻风摄像头  
{
    //共6个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 总 */
    0x10,0x10,0x08,0x20,0x04,0x40,0x00,0x00,0x1F,0xF0,0x10,0x10,0x10,0x10,0x10,0x10,
    0x1F,0xF0,0x10,0x10,0x01,0x00,0x08,0x84,0x48,0x92,0x48,0x12,0x87,0xF0,0x00,0x00,
    /* 钻 */
    0x10,0x20,0x10,0x20,0x3C,0x20,0x20,0x20,0x40,0x3E,0xBC,0x20,0x10,0x20,0x10,0x20,
    0xFD,0xFC,0x11,0x04,0x11,0x04,0x11,0x04,0x15,0x04,0x19,0x04,0x11,0xFC,0x01,0x04,
    /* 风 */
    0x00,0x00,0x3F,0xF0,0x20,0x10,0x20,0x10,0x28,0x50,0x24,0x50,0x22,0x90,0x22,0x90,
    0x21,0x10,0x21,0x10,0x22,0x90,0x22,0x92,0x24,0x4A,0x48,0x4A,0x40,0x06,0x80,0x02,
    /* 摄 */
    0x10,0x00,0x13,0xFC,0x11,0x08,0x11,0xF8,0xFD,0x08,0x11,0xF8,0x11,0x0E,0x17,0xF8,
    0x18,0x08,0x37,0xBC,0xD0,0xA4,0x12,0xA4,0x11,0x28,0x12,0x90,0x54,0xA8,0x28,0x46,
    /* 像 */
    0x09,0x00,0x09,0xF0,0x0A,0x10,0x17,0xFC,0x1A,0x24,0x32,0x44,0x33,0xFC,0x50,0x80,
    0x91,0x44,0x16,0xA8,0x11,0x30,0x16,0x68,0x10,0xA8,0x11,0x24,0x16,0xA2,0x10,0x40,
    /* 头 */
    0x00,0x80,0x00,0x80,0x08,0x80,0x04,0x80,0x24,0x80,0x10,0x80,0x10,0x80,0x00,0x80,
    0xFF,0xFE,0x01,0x00,0x01,0x40,0x02,0x20,0x04,0x10,0x08,0x08,0x30,0x04,0xC0,0x04,
};

static unsigned char const KP_func_name[4*2*16]= //调节KP  
{
    //共4个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 调 */
    0x00,0x00,0x47,0xFC,0x24,0x44,0x24,0x44,0x05,0xF4,0x04,0x44,0xE4,0x44,0x27,0xFC,
    0x24,0x04,0x25,0xF4,0x25,0x14,0x2D,0x14,0x35,0xF4,0x24,0x04,0x04,0x14,0x08,0x08,
    /* 节 */
    0x08,0x20,0x08,0x20,0xFF,0xFE,0x08,0x20,0x08,0x20,0x00,0x00,0x7F,0xF8,0x02,0x08,
    0x02,0x08,0x02,0x08,0x02,0x08,0x02,0x50,0x02,0x20,0x02,0x00,0x02,0x00,0x02,0x00,
    /* K */
    0x00,0x00,0x00,0x00,0x00,0x00,0xEE,0x00,0x44,0x00,0x48,0x00,0x50,0x00,0x70,0x00,
    0x50,0x00,0x48,0x00,0x48,0x00,0x44,0x00,0x44,0x00,0xEE,0x00,0x00,0x00,0x00,0x00,
    /* P */
    0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x42,0x00,
    0x7C,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,
};

static unsigned char const KI_func_name[4*2*16]= //调节KI  
{
    //共4个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 调 */
    0x00,0x00,0x47,0xFC,0x24,0x44,0x24,0x44,0x05,0xF4,0x04,0x44,0xE4,0x44,0x27,0xFC,
    0x24,0x04,0x25,0xF4,0x25,0x14,0x2D,0x14,0x35,0xF4,0x24,0x04,0x04,0x14,0x08,0x08,
    /* 节 */
    0x08,0x20,0x08,0x20,0xFF,0xFE,0x08,0x20,0x08,0x20,0x00,0x00,0x7F,0xF8,0x02,0x08,
    0x02,0x08,0x02,0x08,0x02,0x08,0x02,0x50,0x02,0x20,0x02,0x00,0x02,0x00,0x02,0x00,
    /* K */
    0x00,0x00,0x00,0x00,0x00,0x00,0xEE,0x00,0x44,0x00,0x48,0x00,0x50,0x00,0x70,0x00,
    0x50,0x00,0x48,0x00,0x48,0x00,0x44,0x00,0x44,0x00,0xEE,0x00,0x00,0x00,0x00,0x00,
    /* I */
    0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x10,0x00,
    0x10,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x10,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,
};

static unsigned char const KD_func_name[4*2*16]= //调节KD  
{
    //共4个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 调 */
    0x00,0x00,0x47,0xFC,0x24,0x44,0x24,0x44,0x05,0xF4,0x04,0x44,0xE4,0x44,0x27,0xFC,
    0x24,0x04,0x25,0xF4,0x25,0x14,0x2D,0x14,0x35,0xF4,0x24,0x04,0x04,0x14,0x08,0x08,
    /* 节 */
    0x08,0x20,0x08,0x20,0xFF,0xFE,0x08,0x20,0x08,0x20,0x00,0x00,0x7F,0xF8,0x02,0x08,
    0x02,0x08,0x02,0x08,0x02,0x08,0x02,0x50,0x02,0x20,0x02,0x00,0x02,0x00,0x02,0x00,
    /* K */
    0x00,0x00,0x00,0x00,0x00,0x00,0xEE,0x00,0x44,0x00,0x48,0x00,0x50,0x00,0x70,0x00,
    0x50,0x00,0x48,0x00,0x48,0x00,0x44,0x00,0x44,0x00,0xEE,0x00,0x00,0x00,0x00,0x00,
    /* D */
    0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x44,0x00,0x42,0x00,0x42,0x00,0x42,0x00,
    0x42,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x44,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,
};


static unsigned char const wheel_KP_name[4*2*16]= //转向KP  
{
    //共4个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 转 */
    0x20,0x20,0x20,0x20,0x20,0x20,0xFD,0xFC,0x40,0x20,0x50,0x40,0x93,0xFE,0xFC,0x40,
    0x10,0x80,0x11,0xFC,0x1C,0x04,0xF0,0x88,0x50,0x50,0x10,0x20,0x10,0x10,0x10,0x10,
    /* 向 */
    0x02,0x00,0x04,0x00,0x08,0x00,0x7F,0xFC,0x40,0x04,0x40,0x04,0x47,0xC4,0x44,0x44,
    0x44,0x44,0x44,0x44,0x44,0x44,0x47,0xC4,0x44,0x44,0x40,0x04,0x40,0x14,0x40,0x08,
    /* K */
    0x00,0x00,0x00,0x00,0x00,0x00,0xEE,0x00,0x44,0x00,0x48,0x00,0x50,0x00,0x70,0x00,
    0x50,0x00,0x48,0x00,0x48,0x00,0x44,0x00,0x44,0x00,0xEE,0x00,0x00,0x00,0x00,0x00,
    /* P */
    0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x42,0x00,
    0x7C,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0x40,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,
};

static unsigned char const wheel_KD_name[4*2*16]= //转向KD  
{
    //共4个字节，一行占用(16+7)/8=2个字节，共16行。
    /* 转 */
    0x20,0x20,0x20,0x20,0x20,0x20,0xFD,0xFC,0x40,0x20,0x50,0x40,0x93,0xFE,0xFC,0x40,
    0x10,0x80,0x11,0xFC,0x1C,0x04,0xF0,0x88,0x50,0x50,0x10,0x20,0x10,0x10,0x10,0x10,
    /* 向 */
    0x02,0x00,0x04,0x00,0x08,0x00,0x7F,0xFC,0x40,0x04,0x40,0x04,0x47,0xC4,0x44,0x44,
    0x44,0x44,0x44,0x44,0x44,0x44,0x47,0xC4,0x44,0x44,0x40,0x04,0x40,0x14,0x40,0x08,
    /* K */
    0x00,0x00,0x00,0x00,0x00,0x00,0xEE,0x00,0x44,0x00,0x48,0x00,0x50,0x00,0x70,0x00,
    0x50,0x00,0x48,0x00,0x48,0x00,0x44,0x00,0x44,0x00,0xEE,0x00,0x00,0x00,0x00,0x00,
    /* D */
    0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x44,0x00,0x42,0x00,0x42,0x00,0x42,0x00,
    0x42,0x00,0x42,0x00,0x42,0x00,0x42,0x00,0x44,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,
};




static menu_t   main_menu[] =   //菜单函数数组
{
    VCAN_MENU(main_func_name,main_func),
    VCAN_MENU(wheel_func_name,wheel_func),
    VCAN_MENU(cam_func_name,cam_func),
};

static menu_t   pid_menu[] =   //菜单函数数组
{
    VCAN_MENU(KP_func_name,KP_func),
    VCAN_MENU(KI_func_name,KI_func),
    VCAN_MENU(KD_func_name,KD_func),
    VCAN_MENU(wheel_KP_name,wheel_KP),
    VCAN_MENU(wheel_KD_name,wheel_KD),
};
/****************************************下列为菜单函数配置************************************/
static Site_t main_menu_site = {0,0};
static uint8 main_menu_max =    ARR_SIZE( main_menu );
static uint8 main_menu_new =  0;


static uint8 pid_menu_max =    ARR_SIZE( pid_menu );
static uint8 pid_menu_new =  0;



static void main_menu_init(void)
{
    menu_init(main_menu_site,main_menu,main_menu_new,main_menu_new,main_menu_max);
}

static void pid_menu_init(void)
{
    menu_init(main_menu_site,pid_menu,pid_menu_new,pid_menu_new,pid_menu_max);
}

static result_e main_menu_deal(void)
{
    return  menu_deal(main_menu_site,main_menu,main_menu_new,&main_menu_new,main_menu_max);
}

static result_e pid_menu_deal(void)
{
    return  menu_deal(main_menu_site,pid_menu,pid_menu_new,&pid_menu_new,pid_menu_max);
}

extern void main_menu_task(void);

#endif   //#ifndef_MAIN_MENU_H_
